package: &@ArtSuite/StandardPackageBuilder.configure {} &package

# import &ArtStandardLib

# standardPackageBuilder =
#   (currentPackage, options = {}) -> (abcPackage) ->
#     options extract?
#       sourceDir = "source"
#       targetDir = "build"
#       mocha
#       mochaAndJest
#       coffeeScript

#     merge currentPackage,
#       scripts:
#         nn:
#           "" nn #{targetDir}/* #{if mocha then :test/tests}
#         test:
#           """
#             npm run nn
#             #{}
#               if mochaAndJest then
#                 """
#                   jest
#                   if [[ $? -ne 0 ]]; then
#                     exit 1
#                   fi
#                   mocha -u tdd
#               else if mocha then "" mocha -u tdd
#               else          :jest

#         build:
#           if coffeeScript
#             """
#               coffee -m --output #{targetDir} --compile #{sourceDir} &
#               COFFEE_PID=$!
#               caf -m -c #{sourceDir} -o #{targetDir} &
#               CAF_PID=$!
#               wait $COFFEE_PID || exit 1
#               wait $CAF_PID || exit 1
#               npm run nn
#           else
#             """
#               caf -m -c #{sourceDir} -o #{targetDir}
#               npm run nn

#         build-clean:  "" npm run clean; npm run build
#         clean:        "" rm -rf #{targetDir}/*
#         watch:        :npm-watch

#       jest:
#         testEnvironment: :node
#         verbose: true
#         collectCoverageFrom:
#           "#{targetDir}/**/*.js",
#           "!#{targetDir}/test/**/*.js"
#         testPathIgnorePatterns:
#           "/node_modules/"
#           "<rootDir>/test" # so it can ignore our mocha tests

#       watch:
#         build:
#           extensions: compactFlattenAll
#             :caf
#             coffeeScript && :coffee

#           patterns:   [] sourceDir
#           quiet:      false


# package: standardPackageBuilder &package